{"ast":null,"code":"import { CLEAR_STATE, GET_BY_ID, GET_BY_NAME, GET_GAMES, SUMBIT_GAME, GET_GENRES, GET_PLATFORMS, ORDER_NAMRAT, ORDER_UPDOWN } from \"../actions\";\nlet initialState = {\n  allGames: [],\n  allGenres: [],\n  platflorms: [],\n  name: \"\",\n  api: \"\",\n  order: \"\"\n};\nfunction rootReducer(state = initialState, action) {\n  let ordenados;\n  switch (action.type) {\n    case GET_BY_NAME:\n      return {\n        ...state,\n        allGames: action.payload\n      };\n    case GET_GAMES:\n      return {\n        ...state,\n        allGames: action.payload\n      };\n    case GET_BY_ID:\n      return {\n        ...state,\n        allGames: action.payload\n      };\n    case SUMBIT_GAME:\n      return {\n        ...state,\n        allGames: [...state.allGames, ...action.payload]\n      };\n    case GET_GENRES:\n      return {\n        ...state,\n        allGenres: action.payload\n      };\n    case GET_PLATFORMS:\n      return {\n        ...state,\n        platflorms: action.payload\n      };\n    case ORDER_UPDOWN:\n      console.log(action.payload);\n      return {\n        ...state,\n        allGames: state.allGames\n      };\n    /*             if (state.name === \"name\") {\r\n                    if (action.payload === \"Ascendente\") {\r\n                        ordenados = state.allGames.sort((a, b) => a.name.localeCompare(b.name))\r\n                    } else if (action.payload === \"Descendente\") {\r\n                        ordenados = state.allGames.sort((a, b) => b.name.localeCompare(a.name))\r\n                    }\r\n                    return {\r\n                        ...state,\r\n                        allGames: [...ordenados]\r\n                    }\r\n    \r\n                } else\r\n    \r\n                    if (action.payload === \"Ascendente\") {\r\n                        ordenados = state.allGames.sort((a, b) => (a.rating > b.rating ? 1 : -1))\r\n                        console.log(state.ratname)\r\n                    } else {\r\n                        ordenados = state.allGames.sort((a, b) => (a.rating < b.rating ? 1 : -1))\r\n                    }\r\n     */\n\n    case ORDER_NAMRAT:\n      if (action.payload = \"name\") {\n        return {\n          ...state,\n          name: true\n        };\n      } else if (action.payload = \"rating\") {\n        return {\n          ...state,\n          name: false\n        };\n      }\n    case CLEAR_STATE:\n      return {\n        allGames: []\n      };\n    default:\n      return state;\n  }\n}\nexport default rootReducer;","map":{"version":3,"names":["CLEAR_STATE","GET_BY_ID","GET_BY_NAME","GET_GAMES","SUMBIT_GAME","GET_GENRES","GET_PLATFORMS","ORDER_NAMRAT","ORDER_UPDOWN","initialState","allGames","allGenres","platflorms","name","api","order","rootReducer","state","action","ordenados","type","payload","console","log"],"sources":["C:/Users/User01/Desktop/PI-Videogames-main/client/src/redux/reducer/index.js"],"sourcesContent":["import { CLEAR_STATE, GET_BY_ID, GET_BY_NAME, GET_GAMES, SUMBIT_GAME, GET_GENRES, GET_PLATFORMS, ORDER_NAMRAT, ORDER_UPDOWN } from \"../actions\";\r\n\r\nlet initialState = { allGames: [], allGenres: [], platflorms: [], name: \"\", api: \"\", order: \"\"}\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n    let ordenados;\r\n    switch (action.type) {\r\n        case GET_BY_NAME:\r\n            return {\r\n                ...state,\r\n                allGames: action.payload\r\n            }\r\n        case GET_GAMES:\r\n            return {\r\n                ...state,\r\n                allGames: action.payload\r\n            }\r\n        case GET_BY_ID:\r\n            return {\r\n                ...state,\r\n                allGames: action.payload\r\n            }\r\n        case SUMBIT_GAME:\r\n            return {\r\n                ...state,\r\n                allGames: [...state.allGames, ...action.payload]\r\n            }\r\n        case GET_GENRES:\r\n            return {\r\n                ...state,\r\n                allGenres: action.payload\r\n            }\r\n        case GET_PLATFORMS:\r\n            return {\r\n                ...state,\r\n                platflorms: action.payload\r\n            }\r\n        case ORDER_UPDOWN:\r\n            console.log(action.payload)\r\n            return{\r\n                ...state,\r\n                allGames: state.allGames\r\n            }\r\n/*             if (state.name === \"name\") {\r\n                if (action.payload === \"Ascendente\") {\r\n                    ordenados = state.allGames.sort((a, b) => a.name.localeCompare(b.name))\r\n                } else if (action.payload === \"Descendente\") {\r\n                    ordenados = state.allGames.sort((a, b) => b.name.localeCompare(a.name))\r\n                }\r\n                return {\r\n                    ...state,\r\n                    allGames: [...ordenados]\r\n                }\r\n\r\n            } else\r\n\r\n                if (action.payload === \"Ascendente\") {\r\n                    ordenados = state.allGames.sort((a, b) => (a.rating > b.rating ? 1 : -1))\r\n                    console.log(state.ratname)\r\n                } else {\r\n                    ordenados = state.allGames.sort((a, b) => (a.rating < b.rating ? 1 : -1))\r\n                }\r\n */\r\n\r\n        case ORDER_NAMRAT:\r\n            if(action.payload = \"name\"){\r\n                return {\r\n                    ...state,\r\n                    name: true\r\n                    \r\n\r\n                }\r\n            } else if (action.payload =\"rating\"){\r\n                return {\r\n                    ...state,\r\n                    name: false\r\n                }\r\n            }\r\n        case CLEAR_STATE:\r\n            return {\r\n                allGames: []\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default rootReducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,WAAW,EAAEC,SAAS,EAAEC,WAAW,EAAEC,UAAU,EAAEC,aAAa,EAAEC,YAAY,EAAEC,YAAY,QAAQ,YAAY;AAE/I,IAAIC,YAAY,GAAG;EAAEC,QAAQ,EAAE,EAAE;EAAEC,SAAS,EAAE,EAAE;EAAEC,UAAU,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,GAAG,EAAE,EAAE;EAAEC,KAAK,EAAE;AAAE,CAAC;AAE/F,SAASC,WAAWA,CAACC,KAAK,GAAGR,YAAY,EAAES,MAAM,EAAE;EAC/C,IAAIC,SAAS;EACb,QAAQD,MAAM,CAACE,IAAI;IACf,KAAKlB,WAAW;MACZ,OAAO;QACH,GAAGe,KAAK;QACRP,QAAQ,EAAEQ,MAAM,CAACG;MACrB,CAAC;IACL,KAAKlB,SAAS;MACV,OAAO;QACH,GAAGc,KAAK;QACRP,QAAQ,EAAEQ,MAAM,CAACG;MACrB,CAAC;IACL,KAAKpB,SAAS;MACV,OAAO;QACH,GAAGgB,KAAK;QACRP,QAAQ,EAAEQ,MAAM,CAACG;MACrB,CAAC;IACL,KAAKjB,WAAW;MACZ,OAAO;QACH,GAAGa,KAAK;QACRP,QAAQ,EAAE,CAAC,GAAGO,KAAK,CAACP,QAAQ,EAAE,GAAGQ,MAAM,CAACG,OAAO;MACnD,CAAC;IACL,KAAKhB,UAAU;MACX,OAAO;QACH,GAAGY,KAAK;QACRN,SAAS,EAAEO,MAAM,CAACG;MACtB,CAAC;IACL,KAAKf,aAAa;MACd,OAAO;QACH,GAAGW,KAAK;QACRL,UAAU,EAAEM,MAAM,CAACG;MACvB,CAAC;IACL,KAAKb,YAAY;MACbc,OAAO,CAACC,GAAG,CAACL,MAAM,CAACG,OAAO,CAAC;MAC3B,OAAM;QACF,GAAGJ,KAAK;QACRP,QAAQ,EAAEO,KAAK,CAACP;MACpB,CAAC;IACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEQ,KAAKH,YAAY;MACb,IAAGW,MAAM,CAACG,OAAO,GAAG,MAAM,EAAC;QACvB,OAAO;UACH,GAAGJ,KAAK;UACRJ,IAAI,EAAE;QAGV,CAAC;MACL,CAAC,MAAM,IAAIK,MAAM,CAACG,OAAO,GAAE,QAAQ,EAAC;QAChC,OAAO;UACH,GAAGJ,KAAK;UACRJ,IAAI,EAAE;QACV,CAAC;MACL;IACJ,KAAKb,WAAW;MACZ,OAAO;QACHU,QAAQ,EAAE;MACd,CAAC;IACL;MACI,OAAOO,KAAK;EAEpB;AAEJ;AAEA,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}