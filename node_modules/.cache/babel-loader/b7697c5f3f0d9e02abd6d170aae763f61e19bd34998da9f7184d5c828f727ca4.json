{"ast":null,"code":"import { CLEAR_STATE, GET_BY_ID, GET_BY_NAME, GET_GAMES, SUMBIT_GAME, GET_GENRES, GET_PLATFORMS, ORDER_NAMRAT, ORDER_UPDOWN, filterGenres, FILTER_GENRES } from \"../actions\";\nlet initialState = {\n  allGames: [],\n  allGenres: [],\n  platflorms: [],\n  aux: []\n};\nfunction rootReducer(state = initialState, action) {\n  let ordenados;\n  let filtrados;\n  switch (action.type) {\n    case GET_BY_NAME:\n      return {\n        ...state,\n        allGames: action.payload\n      };\n    case GET_GAMES:\n      return {\n        ...state,\n        allGames: action.payload\n      };\n    case GET_BY_ID:\n      return {\n        ...state,\n        allGames: action.payload\n      };\n    case SUMBIT_GAME:\n      return {\n        ...state,\n        allGames: [...state.allGames, ...action.payload]\n      };\n    case GET_GENRES:\n      return {\n        ...state,\n        allGenres: action.payload\n      };\n    case GET_PLATFORMS:\n      return {\n        ...state,\n        platflorms: action.payload\n      };\n    case ORDER_UPDOWN:\n      if (action.payload === \"A Nombre\") {\n        ordenados = state.allGames.sort((a, b) => a.name.localeCompare(b.name));\n      }\n      if (action.payload === \"D Nombre\") {\n        ordenados = state.allGames.sort((a, b) => b.name.localeCompare(a.name));\n      }\n      if (action.payload === \"A Rating\") {\n        ordenados = state.allGames.sort((a, b) => a.rating > b.rating ? 1 : -1);\n      }\n      if (action.payload === \"D Rating\") {\n        ordenados = state.allGames.sort((a, b) => a.rating < b.rating ? 1 : -1);\n      }\n      return {\n        ...state,\n        allGames: ordenados\n      };\n    case FILTER_GENRES:\n      filtrados = state.allGames.filter(game => {\n        const selectedGenres = Object.keys(action.payload).filter(genre => action.payload[genre]);\n        return selectedGenres.every(selectedGenre => game.genres.includes(selectedGenre));\n      });\n      console.log(action.payload);\n      return {\n        ...state,\n        allGames: state.allGames\n      };\n    case FILTER_BY_ORIGIN:\n    /*             if (action.payload === \"DB\") {\r\n                    filtrados = state.allGames.filter((game) => {\r\n                        return game.id.includes(\"-\")\r\n                    })\r\n                    return {\r\n                        ...state,\r\n                        aux: state.allGames,\r\n                        allGames: filtrados\r\n                    }\r\n                }\r\n                if (action.payload === \"API\") {\r\n                    filtrados = state.allGames.filter((game) => {\r\n                        return Number(game.id)\r\n                    })\r\n                    return {\r\n                        ...state,\r\n                        aux: state.allGames,\r\n                        allGames: filtrados,\r\n                    }\r\n                }\r\n     */\n    case CLEAR_STATE:\n      return {\n        allGames: []\n      };\n    default:\n      return state;\n  }\n}\nexport default rootReducer;","map":{"version":3,"names":["CLEAR_STATE","GET_BY_ID","GET_BY_NAME","GET_GAMES","SUMBIT_GAME","GET_GENRES","GET_PLATFORMS","ORDER_NAMRAT","ORDER_UPDOWN","filterGenres","FILTER_GENRES","initialState","allGames","allGenres","platflorms","aux","rootReducer","state","action","ordenados","filtrados","type","payload","sort","a","b","name","localeCompare","rating","filter","game","selectedGenres","Object","keys","genre","every","selectedGenre","genres","includes","console","log","FILTER_BY_ORIGIN"],"sources":["C:/Users/User01/Desktop/PI-Videogames-main/client/src/redux/reducer/index.js"],"sourcesContent":["import { CLEAR_STATE, GET_BY_ID, GET_BY_NAME, GET_GAMES, SUMBIT_GAME, GET_GENRES, GET_PLATFORMS, ORDER_NAMRAT, ORDER_UPDOWN, filterGenres, FILTER_GENRES } from \"../actions\";\r\n\r\nlet initialState = { allGames: [], allGenres: [], platflorms: [], aux: [] }\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n    let ordenados;\r\n    let filtrados;\r\n\r\n    switch (action.type) {\r\n\r\n        case GET_BY_NAME:\r\n            return {\r\n                ...state,\r\n                allGames: action.payload\r\n            }\r\n        case GET_GAMES:\r\n            return {\r\n                ...state,\r\n                allGames: action.payload\r\n            }\r\n        case GET_BY_ID:\r\n            return {\r\n                ...state,\r\n                allGames: action.payload\r\n            }\r\n        case SUMBIT_GAME:\r\n            return {\r\n                ...state,\r\n                allGames: [...state.allGames, ...action.payload]\r\n            }\r\n        case GET_GENRES:\r\n            return {\r\n                ...state,\r\n                allGenres: action.payload\r\n            }\r\n        case GET_PLATFORMS:\r\n            return {\r\n                ...state,\r\n                platflorms: action.payload\r\n            }\r\n\r\n        case ORDER_UPDOWN:\r\n            if (action.payload === \"A Nombre\") {\r\n                ordenados = state.allGames.sort((a, b) => a.name.localeCompare(b.name))\r\n            }\r\n            if (action.payload === \"D Nombre\") {\r\n                ordenados = state.allGames.sort((a, b) => b.name.localeCompare(a.name))\r\n            }\r\n            if (action.payload === \"A Rating\") {\r\n                ordenados = state.allGames.sort((a, b) => (a.rating > b.rating ? 1 : -1))\r\n            }\r\n            if (action.payload === \"D Rating\") {\r\n                ordenados = state.allGames.sort((a, b) => (a.rating < b.rating ? 1 : -1))\r\n            }\r\n            return {\r\n                ...state,\r\n                allGames: ordenados,\r\n            }\r\n        case FILTER_GENRES:\r\n            filtrados = state.allGames.filter((game) => {\r\n                const selectedGenres = Object.keys(action.payload).filter((genre) => action.payload[genre]);\r\n                return selectedGenres.every((selectedGenre) => game.genres.includes(selectedGenre));\r\n            });\r\n\r\n            console.log(action.payload);\r\n\r\n            return {\r\n                ...state,\r\n                allGames: state.allGames\r\n            }\r\n        case FILTER_BY_ORIGIN:\r\n/*             if (action.payload === \"DB\") {\r\n                filtrados = state.allGames.filter((game) => {\r\n                    return game.id.includes(\"-\")\r\n                })\r\n                return {\r\n                    ...state,\r\n                    aux: state.allGames,\r\n                    allGames: filtrados\r\n                }\r\n            }\r\n            if (action.payload === \"API\") {\r\n                filtrados = state.allGames.filter((game) => {\r\n                    return Number(game.id)\r\n                })\r\n                return {\r\n                    ...state,\r\n                    aux: state.allGames,\r\n                    allGames: filtrados,\r\n                }\r\n            }\r\n */\r\n        case CLEAR_STATE:\r\n            return {\r\n                allGames: []\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default rootReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}