{"ast":null,"code":"import { CLEAR_STATE, GET_BY_ID, GET_BY_NAME, GET_GAMES, SUMBIT_GAME, GET_GENRES, GET_PLATFORMS, ORDER_UPDOWN, FILTER_BY_ORIGIN, FILTER_GENRES } from \"../actions\";\nlet initialState = {\n  allGames: [],\n  allGenres: [],\n  platflorms: [],\n  aux: [],\n  selectedGenres: {}\n};\nfunction rootReducer(state = initialState, action) {\n  let ordenados;\n  let filtrados;\n  let generos;\n  switch (action.type) {\n    case GET_BY_NAME:\n      return {\n        ...state,\n        allGames: action.payload\n      };\n    case GET_GAMES:\n      return {\n        ...state,\n        allGames: action.payload\n      };\n    case GET_BY_ID:\n      return {\n        ...state,\n        allGames: action.payload\n      };\n    case SUMBIT_GAME:\n      return {\n        ...state,\n        allGames: [...state.allGames, ...action.payload]\n      };\n    case GET_GENRES:\n      return {\n        ...state,\n        allGenres: action.payload\n      };\n    case GET_PLATFORMS:\n      return {\n        ...state,\n        platflorms: action.payload\n      };\n    case ORDER_UPDOWN:\n      if (action.payload === \"A Nombre\") {\n        ordenados = state.allGames.sort((a, b) => a.name.localeCompare(b.name));\n      }\n      if (action.payload === \"D Nombre\") {\n        ordenados = state.allGames.sort((a, b) => b.name.localeCompare(a.name));\n      }\n      if (action.payload === \"A Rating\") {\n        ordenados = state.allGames.sort((a, b) => a.rating > b.rating ? 1 : -1);\n      }\n      if (action.payload === \"D Rating\") {\n        ordenados = state.allGames.sort((a, b) => a.rating < b.rating ? 1 : -1);\n      }\n      return {\n        ...state,\n        allGames: ordenados\n      };\n    case FILTER_GENRES:\n      /*             if(!generos?.includes(action.payload)) generos?.push(action.payload)\r\n                  else if (generos?.includes(action.payload)) generos = generos?.filter((genre)=> genre !== action.payload)\r\n                  \r\n                  console.log(generos) */\n\n      // Clonar el objeto de géneros seleccionados actual\n      const selectedGenresCopy = {\n        ...state.selectedGenres\n      };\n      if (!selectedGenresCopy[action.payload]) {\n        // Si el género no está seleccionado, marcarlo como seleccionado\n        selectedGenresCopy[action.payload] = true;\n      } else {\n        // Si el género ya está seleccionado, desmarcarlo\n        delete selectedGenresCopy[action.payload];\n      }\n      const selectedGenres = state.selectedGenres;\n      // Filtrar los juegos en función de los géneros seleccionados\n      filtrados = state.allGames.filter(game => {\n        return Object.keys(selectedGenres).every(selectedGenre => game.genres.includes(selectedGenre));\n      });\n      console.log(selectedGenres);\n      return {\n        ...state,\n        allGames: filtrados\n      };\n    case FILTER_BY_ORIGIN:\n      const todos = [...state.allGames, ...state.aux];\n      if (action.payload === \"DB\") {\n        filtrados = todos.filter(game => {\n          return typeof game.id === 'string' && game.id.includes(\"-\");\n        });\n        /*                 if (filtrados.length < 1){\r\n                            filtrados =\r\n                        } */\n        return {\n          ...state,\n          aux: state.allGames,\n          allGames: filtrados\n        };\n      }\n      if (action.payload === \"API\") {\n        filtrados = todos.filter(game => {\n          return typeof game.id === 'number';\n        });\n        return {\n          ...state,\n          aux: state.allGames,\n          allGames: filtrados\n        };\n      }\n      if (action.payload === \"All\") {\n        return {\n          ...state,\n          allGames: todos\n        };\n      }\n      break;\n    case CLEAR_STATE:\n      return {\n        allGames: []\n      };\n    default:\n      return state;\n  }\n}\nexport default rootReducer;","map":{"version":3,"names":["CLEAR_STATE","GET_BY_ID","GET_BY_NAME","GET_GAMES","SUMBIT_GAME","GET_GENRES","GET_PLATFORMS","ORDER_UPDOWN","FILTER_BY_ORIGIN","FILTER_GENRES","initialState","allGames","allGenres","platflorms","aux","selectedGenres","rootReducer","state","action","ordenados","filtrados","generos","type","payload","sort","a","b","name","localeCompare","rating","selectedGenresCopy","filter","game","Object","keys","every","selectedGenre","genres","includes","console","log","todos","id"],"sources":["C:/Users/User01/Desktop/PI-Videogames-main/client/src/redux/reducer/index.js"],"sourcesContent":["import { CLEAR_STATE, GET_BY_ID, GET_BY_NAME, GET_GAMES, SUMBIT_GAME, GET_GENRES, GET_PLATFORMS, ORDER_UPDOWN, FILTER_BY_ORIGIN, FILTER_GENRES } from \"../actions\";\r\n\r\nlet initialState = { allGames: [], allGenres: [], platflorms: [], aux: [], selectedGenres: {} }\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n    let ordenados;\r\n    let filtrados;\r\n    let generos;\r\n\r\n    switch (action.type) {\r\n\r\n        case GET_BY_NAME:\r\n            return {\r\n                ...state,\r\n                allGames: action.payload\r\n            }\r\n        case GET_GAMES:\r\n            return {\r\n                ...state,\r\n                allGames: action.payload\r\n            }\r\n        case GET_BY_ID:\r\n            return {\r\n                ...state,\r\n                allGames: action.payload\r\n            }\r\n        case SUMBIT_GAME:\r\n            return {\r\n                ...state,\r\n                allGames: [...state.allGames, ...action.payload]\r\n            }\r\n        case GET_GENRES:\r\n            return {\r\n                ...state,\r\n                allGenres: action.payload\r\n            }\r\n        case GET_PLATFORMS:\r\n            return {\r\n                ...state,\r\n                platflorms: action.payload\r\n            }\r\n\r\n        case ORDER_UPDOWN:\r\n            if (action.payload === \"A Nombre\") {\r\n                ordenados = state.allGames.sort((a, b) => a.name.localeCompare(b.name))\r\n            }\r\n            if (action.payload === \"D Nombre\") {\r\n                ordenados = state.allGames.sort((a, b) => b.name.localeCompare(a.name))\r\n            }\r\n            if (action.payload === \"A Rating\") {\r\n                ordenados = state.allGames.sort((a, b) => (a.rating > b.rating ? 1 : -1))\r\n            }\r\n            if (action.payload === \"D Rating\") {\r\n                ordenados = state.allGames.sort((a, b) => (a.rating < b.rating ? 1 : -1))\r\n            }\r\n            return {\r\n                ...state,\r\n                allGames: ordenados,\r\n            }\r\n\r\n        case FILTER_GENRES:\r\n/*             if(!generos?.includes(action.payload)) generos?.push(action.payload)\r\n            else if (generos?.includes(action.payload)) generos = generos?.filter((genre)=> genre !== action.payload)\r\n            \r\n            console.log(generos) */\r\n\r\n\r\n            // Clonar el objeto de géneros seleccionados actual\r\n            const selectedGenresCopy = { ...state.selectedGenres };\r\n\r\n            if (!selectedGenresCopy[action.payload]) {\r\n                // Si el género no está seleccionado, marcarlo como seleccionado\r\n                selectedGenresCopy[action.payload] = true;\r\n            } else {\r\n                // Si el género ya está seleccionado, desmarcarlo\r\n                delete selectedGenresCopy[action.payload];\r\n            }\r\n\r\n            const selectedGenres = state.selectedGenres;\r\n            // Filtrar los juegos en función de los géneros seleccionados\r\n            filtrados = state.allGames.filter((game) => {\r\n                return Object.keys(selectedGenres).every(\r\n                    (selectedGenre) => game.genres.includes(selectedGenre)\r\n                );\r\n            });\r\n\r\n            console.log(selectedGenres)\r\n\r\n            return {\r\n                ...state,\r\n                allGames: filtrados,\r\n            };\r\n\r\n        case FILTER_BY_ORIGIN:\r\n            const todos = [...state.allGames, ...state.aux];\r\n\r\n            if (action.payload === \"DB\") {\r\n                filtrados = todos.filter((game) => {\r\n                    return typeof game.id === 'string' && game.id.includes(\"-\");\r\n                });\r\n/*                 if (filtrados.length < 1){\r\n                    filtrados =\r\n                } */\r\n                return {\r\n                    ...state,\r\n                    aux: state.allGames,\r\n                    allGames: filtrados,\r\n                };\r\n            }\r\n            if (action.payload === \"API\") {\r\n                filtrados = todos.filter((game) => {\r\n                    return typeof game.id === 'number';\r\n                });\r\n                return {\r\n                    ...state,\r\n                    aux: state.allGames,\r\n                    allGames: filtrados,\r\n                };\r\n            }\r\n            if (action.payload === \"All\") {\r\n                return {\r\n                    ...state,\r\n                    allGames: todos,\r\n                };\r\n            }\r\n            break;\r\n        case CLEAR_STATE:\r\n            return {\r\n                allGames: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default rootReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}