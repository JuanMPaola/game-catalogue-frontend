{"ast":null,"code":"import { CLEAR_STATE, GET_BY_ID, GET_BY_NAME, GET_GAMES, SUMBIT_GAME, GET_GENRES, GET_PLATFORMS, ORDER_UPDOWN, FILTER_BY_ORIGIN, FILTER_GENRES } from \"../actions\";\nlet initialState = {\n  allGames: [],\n  allGenres: [],\n  platflorms: [],\n  aux: []\n};\nfunction rootReducer(state = initialState, action) {\n  let ordenados;\n  let filtrados;\n  let generos;\n  switch (action.type) {\n    case GET_BY_NAME:\n      return {\n        ...state,\n        allGames: action.payload\n      };\n    case GET_GAMES:\n      return {\n        ...state,\n        allGames: action.payload\n      };\n    case GET_BY_ID:\n      return {\n        ...state,\n        allGames: action.payload\n      };\n    case SUMBIT_GAME:\n      return {\n        ...state,\n        allGames: [...state.allGames, ...action.payload]\n      };\n    case GET_GENRES:\n      return {\n        ...state,\n        allGenres: action.payload\n      };\n    case GET_PLATFORMS:\n      return {\n        ...state,\n        platflorms: action.payload\n      };\n    case ORDER_UPDOWN:\n      if (action.payload === \"A Nombre\") {\n        ordenados = state.allGames.sort((a, b) => a.name.localeCompare(b.name));\n      }\n      if (action.payload === \"D Nombre\") {\n        ordenados = state.allGames.sort((a, b) => b.name.localeCompare(a.name));\n      }\n      if (action.payload === \"A Rating\") {\n        ordenados = state.allGames.sort((a, b) => a.rating > b.rating ? 1 : -1);\n      }\n      if (action.payload === \"D Rating\") {\n        ordenados = state.allGames.sort((a, b) => a.rating < b.rating ? 1 : -1);\n      }\n      return {\n        ...state,\n        allGames: ordenados\n      };\n    case FILTER_GENRES:\n      if (!generos.includes(action.payload)) generos.push(action.payload);else if (generos.includes(action.payload)) generos = generos.filter(genre => genre !== action.payload);\n      console.log(generos);\n      return {\n        ...state,\n        allGames: filtrados\n      };\n    case FILTER_BY_ORIGIN:\n      const todos = [...state.allGames, ...state.aux];\n      if (action.payload === \"DB\") {\n        filtrados = todos.filter(game => {\n          return typeof game.id === 'string' && game.id.includes(\"-\");\n        });\n        return {\n          ...state,\n          aux: state.allGames,\n          allGames: filtrados\n        };\n      }\n      if (action.payload === \"API\") {\n        filtrados = todos.filter(game => {\n          return typeof game.id === 'number';\n        });\n        return {\n          ...state,\n          aux: state.allGames,\n          allGames: filtrados\n        };\n      }\n      if (action.payload === \"All\") {\n        return {\n          ...state,\n          allGames: todos\n        };\n      }\n      break;\n    case CLEAR_STATE:\n      return {\n        allGames: []\n      };\n    default:\n      return state;\n  }\n}\nexport default rootReducer;","map":{"version":3,"names":["CLEAR_STATE","GET_BY_ID","GET_BY_NAME","GET_GAMES","SUMBIT_GAME","GET_GENRES","GET_PLATFORMS","ORDER_UPDOWN","FILTER_BY_ORIGIN","FILTER_GENRES","initialState","allGames","allGenres","platflorms","aux","rootReducer","state","action","ordenados","filtrados","generos","type","payload","sort","a","b","name","localeCompare","rating","includes","push","filter","genre","console","log","todos","game","id"],"sources":["C:/Users/User01/Desktop/PI-Videogames-main/client/src/redux/reducer/index.js"],"sourcesContent":["import { CLEAR_STATE, GET_BY_ID, GET_BY_NAME, GET_GAMES, SUMBIT_GAME, GET_GENRES, GET_PLATFORMS, ORDER_UPDOWN, FILTER_BY_ORIGIN, FILTER_GENRES } from \"../actions\";\r\n\r\nlet initialState = { allGames: [], allGenres: [], platflorms: [], aux: [] }\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n    let ordenados;\r\n    let filtrados;\r\n    let generos;\r\n\r\n    switch (action.type) {\r\n\r\n        case GET_BY_NAME:\r\n            return {\r\n                ...state,\r\n                allGames: action.payload\r\n            }\r\n        case GET_GAMES:\r\n            return {\r\n                ...state,\r\n                allGames: action.payload\r\n            }\r\n        case GET_BY_ID:\r\n            return {\r\n                ...state,\r\n                allGames: action.payload\r\n            }\r\n        case SUMBIT_GAME:\r\n            return {\r\n                ...state,\r\n                allGames: [...state.allGames, ...action.payload]\r\n            }\r\n        case GET_GENRES:\r\n            return {\r\n                ...state,\r\n                allGenres: action.payload\r\n            }\r\n        case GET_PLATFORMS:\r\n            return {\r\n                ...state,\r\n                platflorms: action.payload\r\n            }\r\n\r\n        case ORDER_UPDOWN:\r\n            if (action.payload === \"A Nombre\") {\r\n                ordenados = state.allGames.sort((a, b) => a.name.localeCompare(b.name))\r\n            }\r\n            if (action.payload === \"D Nombre\") {\r\n                ordenados = state.allGames.sort((a, b) => b.name.localeCompare(a.name))\r\n            }\r\n            if (action.payload === \"A Rating\") {\r\n                ordenados = state.allGames.sort((a, b) => (a.rating > b.rating ? 1 : -1))\r\n            }\r\n            if (action.payload === \"D Rating\") {\r\n                ordenados = state.allGames.sort((a, b) => (a.rating < b.rating ? 1 : -1))\r\n            }\r\n            return {\r\n                ...state,\r\n                allGames: ordenados,\r\n            }\r\n\r\n        case FILTER_GENRES:\r\n            if(!generos.includes(action.payload)) generos.push(action.payload)\r\n            else if (generos.includes(action.payload)) generos = generos.filter((genre)=> genre !== action.payload)\r\n            \r\n            console.log(generos)\r\n\r\n            return {\r\n                ...state,\r\n                allGames: filtrados\r\n            }\r\n\r\n        case FILTER_BY_ORIGIN:\r\n            const todos = [...state.allGames, ...state.aux];\r\n\r\n            if (action.payload === \"DB\") {\r\n                filtrados = todos.filter((game) => {\r\n                    return typeof game.id === 'string' && game.id.includes(\"-\");\r\n                });\r\n                return {\r\n                    ...state,\r\n                    aux: state.allGames,\r\n                    allGames: filtrados,\r\n                };\r\n            }\r\n            if (action.payload === \"API\") {\r\n                filtrados = todos.filter((game) => {\r\n                    return typeof game.id === 'number';\r\n                });\r\n                return {\r\n                    ...state,\r\n                    aux: state.allGames,\r\n                    allGames: filtrados,\r\n                };\r\n            }\r\n            if (action.payload === \"All\") {\r\n                return {\r\n                    ...state,\r\n                    allGames: todos,\r\n                };\r\n            }\r\n            break;\r\n        case CLEAR_STATE:\r\n            return {\r\n                allGames: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default rootReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}