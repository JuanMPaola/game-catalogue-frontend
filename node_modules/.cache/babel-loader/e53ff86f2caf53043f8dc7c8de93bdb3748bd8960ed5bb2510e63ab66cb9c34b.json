{"ast":null,"code":"import { CLEAR_STATE, GET_BY_ID, GET_BY_NAME, GET_GAMES, SUMBIT_GAME, GET_GENRES, GET_PLATFORMS, ORDER_NAMRAT, ORDER_UPDOWN } from \"../actions\";\nlet initialState = {\n  allGames: [],\n  allGenres: [],\n  platflorms: [],\n  orden: \"\",\n  ratName: \"\"\n};\nfunction rootReducer(state = initialState, action) {\n  let ordenados;\n  switch (action.type) {\n    case GET_BY_NAME:\n      return {\n        ...state,\n        allGames: action.payload\n      };\n    case GET_GAMES:\n      return {\n        ...state,\n        allGames: action.payload\n      };\n    case GET_BY_ID:\n      return {\n        ...state,\n        allGames: action.payload\n      };\n    case SUMBIT_GAME:\n      return {\n        ...state,\n        allGames: [...state.allGames, ...action.payload]\n      };\n    case GET_GENRES:\n      return {\n        ...state,\n        allGenres: action.payload\n      };\n    case GET_PLATFORMS:\n      return {\n        ...state,\n        platflorms: action.payload\n      };\n    case ORDER_UPDOWN:\n      if (state.ratName === \"name\") {\n        if (action.payload.Orden === \"Ascendente\") {\n          ordenados = state.allGames.sort((a, b) => a.name.localeCompare(b.name));\n        } else if (action.payload.Orden === \"Descendente\") {\n          ordenados = state.allGames.sort((a, b) => b.name.localeCompare(a.name));\n        } else {\n          ordenados = state.allGames.sort((a, b) => b.name.localeCompare(a.name));\n        }\n        console.log(ordenados);\n        return {\n          ...state,\n          allGames: ordenados,\n          orden: action.payload\n        };\n      }\n      if (state.ratName === \"rating\") {\n        if (action.payload.Orden === \"Ascendente\") {\n          ordenados = state.allGames.sort((a, b) => a.rating > b.rating ? 1 : -1);\n        } else if (action.payload.Orden === \"Descendente\") {\n          ordenados = state.allGames.sort((a, b) => a.rating < b.rating ? 1 : -1);\n        } else {\n          ordenados = state.allGames.sort((a, b) => a.rating < b.rating ? 1 : -1);\n        }\n        return {\n          ...state,\n          allGames: ordenados,\n          orden: action.payload\n        };\n      }\n    case ORDER_NAMRAT:\n      if (state.orden === \"Ascendente\") {\n        if (action.payload === \"name\") {\n          ordenados = state.allGames.sort((a, b) => a.name.localeCompare(b.name));\n        } else if (action.payload === \"rating\") {\n          ordenados = state.allGames.sort((a, b) => a.rating > b.rating ? 1 : -1);\n        } else {\n          ordenados = state.allGames.sort((a, b) => a.rating > b.rating ? 1 : -1);\n        }\n        return {\n          ...state,\n          allGames: ordenados,\n          ratName: action.payload\n        };\n      }\n      if (state.orden === \"Descendente\") {\n        if (action.payload === \"name\") {\n          ordenados = state.allGames.sort((a, b) => b.name.localeCompare(a.name));\n        } else if (action.payload === \"rating\") {\n          ordenados = state.allGames.sort((a, b) => a.rating < b.rating ? 1 : -1);\n        } else {\n          ordenados = state.allGames.sort((a, b) => a.rating < b.rating ? 1 : -1);\n        }\n        return {\n          ...state,\n          allGames: ordenados,\n          ratName: action.payload\n        };\n      }\n    case CLEAR_STATE:\n      return {\n        allGames: []\n      };\n    default:\n      return state;\n  }\n}\nexport default rootReducer;","map":{"version":3,"names":["CLEAR_STATE","GET_BY_ID","GET_BY_NAME","GET_GAMES","SUMBIT_GAME","GET_GENRES","GET_PLATFORMS","ORDER_NAMRAT","ORDER_UPDOWN","initialState","allGames","allGenres","platflorms","orden","ratName","rootReducer","state","action","ordenados","type","payload","Orden","sort","a","b","name","localeCompare","console","log","rating"],"sources":["C:/Users/User01/Desktop/PI-Videogames-main/client/src/redux/reducer/index.js"],"sourcesContent":["import { CLEAR_STATE, GET_BY_ID, GET_BY_NAME, GET_GAMES, SUMBIT_GAME, GET_GENRES, GET_PLATFORMS, ORDER_NAMRAT, ORDER_UPDOWN } from \"../actions\";\r\n\r\nlet initialState = { allGames: [], allGenres: [], platflorms: [], orden: \"\", ratName:\"\" }\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n    let ordenados;\r\n    switch (action.type) {\r\n        case GET_BY_NAME:\r\n            return {\r\n                ...state,\r\n                allGames: action.payload\r\n            }\r\n        case GET_GAMES:\r\n            return {\r\n                ...state,\r\n                allGames: action.payload\r\n            }\r\n        case GET_BY_ID:\r\n            return {\r\n                ...state,\r\n                allGames: action.payload\r\n            }\r\n        case SUMBIT_GAME:\r\n            return {\r\n                ...state,\r\n                allGames: [...state.allGames, ...action.payload]\r\n            }\r\n        case GET_GENRES:\r\n            return {\r\n                ...state,\r\n                allGenres: action.payload\r\n            }\r\n        case GET_PLATFORMS:\r\n            return {\r\n                ...state,\r\n                platflorms: action.payload\r\n            }\r\n\r\n        case ORDER_UPDOWN:\r\n            if (state.ratName === \"name\") {\r\n                if (action.payload.Orden === \"Ascendente\") {\r\n                    ordenados = state.allGames.sort((a, b) => a.name.localeCompare(b.name))\r\n                } else if (action.payload.Orden === \"Descendente\") {\r\n                    ordenados = state.allGames.sort((a, b) => b.name.localeCompare(a.name))\r\n                } else {\r\n                    ordenados = state.allGames.sort((a, b) => b.name.localeCompare(a.name))\r\n                }\r\n                console.log(ordenados)\r\n                return {\r\n                    ...state,\r\n                    allGames: ordenados,\r\n                    orden: action.payload,\r\n                }\r\n            }\r\n            if (state.ratName === \"rating\"){\r\n                if (action.payload.Orden === \"Ascendente\") {\r\n                    ordenados = state.allGames.sort((a, b) => (a.rating > b.rating ? 1 : -1))\r\n                } else if (action.payload.Orden === \"Descendente\") {\r\n                    ordenados = state.allGames.sort((a, b) => (a.rating < b.rating ? 1 : -1))\r\n                } else{\r\n                    ordenados = state.allGames.sort((a, b) => (a.rating < b.rating ? 1 : -1))\r\n                }\r\n                return {\r\n                    ...state,\r\n                    allGames: ordenados,\r\n                    orden: action.payload,\r\n                }\r\n            }\r\n\r\n\r\n\r\n        case ORDER_NAMRAT:\r\n            if(state.orden === \"Ascendente\"){\r\n                if (action.payload === \"name\") {\r\n                    ordenados = state.allGames.sort((a, b) => a.name.localeCompare(b.name))\r\n                } else if (action.payload === \"rating\") {\r\n                    ordenados = state.allGames.sort((a, b) => (a.rating > b.rating ? 1 : -1))\r\n                } else {\r\n                    ordenados = state.allGames.sort((a, b) => (a.rating > b.rating ? 1 : -1))\r\n                }\r\n                return {\r\n                    ...state,\r\n                    allGames: ordenados,\r\n                    ratName: action.payload\r\n                }\r\n            }\r\n            if(state.orden === \"Descendente\"){\r\n                if (action.payload === \"name\") {\r\n                    ordenados = state.allGames.sort((a, b) => b.name.localeCompare(a.name))\r\n                } else if (action.payload === \"rating\") {\r\n                    ordenados = state.allGames.sort((a, b) => (a.rating < b.rating ? 1 : -1))\r\n                }else {\r\n                    ordenados = state.allGames.sort((a, b) => (a.rating < b.rating ? 1 : -1))\r\n                }\r\n                return {\r\n                    ...state,\r\n                    allGames: ordenados,\r\n                    ratName: action.payload\r\n                }\r\n            }\r\n\r\n\r\n        case CLEAR_STATE:\r\n            return {\r\n                allGames: []\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default rootReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}