{"ast":null,"code":"import { CLEAR_STATE, GET_BY_ID, GET_BY_NAME, GET_GAMES, SUMBIT_GAME, GET_GENRES, GET_PLATFORMS, ORDER_UPDOWN, FILTER_BY_ORIGIN, FILTER_GENRES } from \"../actions\";\nlet initialState = {\n  allGames: [],\n  allGenres: [],\n  gameId: {},\n  platflorms: [],\n  auxTodosOrigin: [],\n  /* selectedGenres: {} */todos: []\n};\nfunction rootReducer(state = initialState, action) {\n  let ordenados;\n  let filtrados;\n  let filtradosGenre = [];\n  switch (action.type) {\n    case GET_BY_NAME:\n      return {\n        ...state,\n        allGames: action.payload\n      };\n    case GET_GAMES:\n      return {\n        ...state,\n        allGames: action.payload,\n        todos: action.payload\n      };\n    case GET_BY_ID:\n      return {\n        ...state,\n        gameId: action.payload\n      };\n    case SUMBIT_GAME:\n      return {\n        ...state,\n        allGames: [...state.allGames, ...action.payload]\n      };\n    case GET_GENRES:\n      return {\n        ...state,\n        allGenres: action.payload\n      };\n    case GET_PLATFORMS:\n      return {\n        ...state,\n        platflorms: action.payload\n      };\n    case ORDER_UPDOWN:\n      if (action.payload === \"A Nombre\") {\n        ordenados = state.allGames.sort((a, b) => a.name.localeCompare(b.name));\n      }\n      if (action.payload === \"D Nombre\") {\n        ordenados = state.allGames.sort((a, b) => b.name.localeCompare(a.name));\n      }\n      if (action.payload === \"A Rating\") {\n        ordenados = state.allGames.sort((a, b) => a.rating > b.rating ? 1 : -1);\n      }\n      if (action.payload === \"D Rating\") {\n        ordenados = state.allGames.sort((a, b) => a.rating < b.rating ? 1 : -1);\n      }\n      return {\n        ...state,\n        allGames: ordenados\n      };\n    case FILTER_GENRES:\n      if (action.payload === \"All\") {\n        return {\n          ...state,\n          allGames: state.todos // Restaura la lista original de juegos sin filtrar\n        };\n      } else {\n        state.todos.filter(game => {\n          game.genres.forEach(genero => {\n            console.log(genero.name);\n            if (genero.name === action.payload) filtradosGenre.push(game);\n          });\n        });\n        return {\n          ...state,\n          allGames: filtradosGenre // Sobrescribe allGame con los juegos filtrados\n        };\n      }\n\n    case FILTER_BY_ORIGIN:\n      /*      state.auxTodosOrigin = state.allGames\r\n             if (action.payload === \"DB\") {\r\n               filtrados = state.allGames.filter((game) => {\r\n                   return typeof game.id === 'string' && game.id.includes(\"-\");\r\n               });\r\n               return {\r\n                   ...state,\r\n                   aux: state.allGames,\r\n                   allGames: filtrados,\r\n               };\r\n           }\r\n           if (action.payload === \"API\") {\r\n               filtrados = allGames.filter((game) => {\r\n                   return typeof game.id === 'string' && game.id.includes(\"-\");\r\n               });\r\n               return {\r\n                   ...state,\r\n                   aux: state.allGames,\r\n                   allGames: filtrados,\r\n               };\r\n           }\r\n      */\n\n      const all = [...state.allGames, ...state.auxTodosOrigin];\n      console.log(all);\n      if (action.payload === \"DB\") {\n        filtrados = all.filter(game => {\n          return typeof game.id === 'string' && game.id.includes(\"-\");\n        });\n        return {\n          ...state,\n          auxTodosOrigin: state.allGames,\n          allGames: filtrados\n        };\n      }\n      if (action.payload === \"API\") {\n        filtrados = all.filter(game => {\n          return typeof game.id === 'number';\n        });\n        return {\n          ...state,\n          auxTodosOrigin: state.allGames,\n          allGames: filtrados\n        };\n      }\n      if (action.payload === \"All\") {\n        return {\n          ...state,\n          allGames: all\n        };\n      }\n      break;\n    case CLEAR_STATE:\n      return {\n        allGames: []\n      };\n    default:\n      return state;\n  }\n}\nexport default rootReducer;","map":{"version":3,"names":["CLEAR_STATE","GET_BY_ID","GET_BY_NAME","GET_GAMES","SUMBIT_GAME","GET_GENRES","GET_PLATFORMS","ORDER_UPDOWN","FILTER_BY_ORIGIN","FILTER_GENRES","initialState","allGames","allGenres","gameId","platflorms","auxTodosOrigin","todos","rootReducer","state","action","ordenados","filtrados","filtradosGenre","type","payload","sort","a","b","name","localeCompare","rating","filter","game","genres","forEach","genero","console","log","push","all","id","includes"],"sources":["C:/Users/User01/Desktop/PI-Videogames-main/client/src/redux/reducer/index.js"],"sourcesContent":["import { CLEAR_STATE, GET_BY_ID, GET_BY_NAME, GET_GAMES, SUMBIT_GAME, GET_GENRES, GET_PLATFORMS, ORDER_UPDOWN, FILTER_BY_ORIGIN, FILTER_GENRES } from \"../actions\";\r\n\r\nlet initialState = { allGames: [], allGenres: [], gameId: {}, platflorms: [], auxTodosOrigin: [], /* selectedGenres: {} */ todos: [] }\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n    let ordenados;\r\n    let filtrados;\r\n    let filtradosGenre = [];\r\n\r\n    switch (action.type) {\r\n\r\n        case GET_BY_NAME:\r\n            return {\r\n                ...state,\r\n                allGames: action.payload\r\n            }\r\n        case GET_GAMES:\r\n            return {\r\n                ...state,\r\n                allGames: action.payload,\r\n                todos: action.payload\r\n            }\r\n        case GET_BY_ID:\r\n            return {\r\n                ...state,\r\n                gameId: action.payload\r\n            }\r\n        case SUMBIT_GAME:\r\n            return {\r\n                ...state,\r\n                allGames: [...state.allGames, ...action.payload]\r\n            }\r\n        case GET_GENRES:\r\n            return {\r\n                ...state,\r\n                allGenres: action.payload\r\n            }\r\n        case GET_PLATFORMS:\r\n            return {\r\n                ...state,\r\n                platflorms: action.payload\r\n            }\r\n\r\n        case ORDER_UPDOWN:\r\n            if (action.payload === \"A Nombre\") {\r\n                ordenados = state.allGames.sort((a, b) => a.name.localeCompare(b.name))\r\n            }\r\n            if (action.payload === \"D Nombre\") {\r\n                ordenados = state.allGames.sort((a, b) => b.name.localeCompare(a.name))\r\n            }\r\n            if (action.payload === \"A Rating\") {\r\n                ordenados = state.allGames.sort((a, b) => (a.rating > b.rating ? 1 : -1))\r\n            }\r\n            if (action.payload === \"D Rating\") {\r\n                ordenados = state.allGames.sort((a, b) => (a.rating < b.rating ? 1 : -1))\r\n            }\r\n            return {\r\n                ...state,\r\n                allGames: ordenados,\r\n            }\r\n\r\n        case FILTER_GENRES:\r\n            if (action.payload === \"All\") {\r\n                return {\r\n                    ...state,\r\n                    allGames: state.todos // Restaura la lista original de juegos sin filtrar\r\n                };\r\n            } else {\r\n                state.todos.filter(game => {\r\n                    game.genres.forEach(genero => {\r\n                        console.log(genero.name)\r\n                        if (genero.name === action.payload) filtradosGenre.push(game)\r\n                    });\r\n                });\r\n                return {\r\n                    ...state,\r\n                    allGames: filtradosGenre // Sobrescribe allGame con los juegos filtrados\r\n                };\r\n            }\r\n\r\n        case FILTER_BY_ORIGIN:\r\n       /*      state.auxTodosOrigin = state.allGames\r\n\r\n            if (action.payload === \"DB\") {\r\n                filtrados = state.allGames.filter((game) => {\r\n                    return typeof game.id === 'string' && game.id.includes(\"-\");\r\n                });\r\n                return {\r\n                    ...state,\r\n                    aux: state.allGames,\r\n                    allGames: filtrados,\r\n                };\r\n            }\r\n            if (action.payload === \"API\") {\r\n                filtrados = allGames.filter((game) => {\r\n                    return typeof game.id === 'string' && game.id.includes(\"-\");\r\n                });\r\n                return {\r\n                    ...state,\r\n                    aux: state.allGames,\r\n                    allGames: filtrados,\r\n                };\r\n            }\r\n */\r\n\r\n        \r\n        const all = [...state.allGames, ...state.auxTodosOrigin];\r\n        console.log(all)\r\n         if (action.payload === \"DB\") {\r\n            filtrados = all.filter((game) => {\r\n                return typeof game.id === 'string' && game.id.includes(\"-\");\r\n            });\r\n            return {\r\n                ...state,\r\n                auxTodosOrigin: state.allGames,\r\n                allGames: filtrados,\r\n            };\r\n        }\r\n        if (action.payload === \"API\") {\r\n            filtrados = all.filter((game) => {\r\n                return typeof game.id === 'number';\r\n            });\r\n            return {\r\n                ...state,\r\n                auxTodosOrigin: state.allGames,\r\n                allGames: filtrados,\r\n            };\r\n        }\r\n        if (action.payload === \"All\") {\r\n            return {\r\n                ...state,\r\n                allGames: all,\r\n            };\r\n        }\r\n        break;\r\n\r\n        case CLEAR_STATE:\r\n            return {\r\n                allGames: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default rootReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}